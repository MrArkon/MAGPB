name: Lint

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pyright:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.x' ]
  
    name: pyright ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Run Pyright
        uses: jakebailey/pyright-action@v1
        with:
          version: '1.1.289'
          warnings: false
          no-comments: ${{ matrix.python-version != '3.11' }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install black and isort
        run: |
          python -m ensurepip
          pip install black isort
      
      - name: Lint with black
        run: black bot --check
      
      - name: Lint with isort
        run: isort bot --check
        
